name: Build

on:
  workflow_dispatch:
  pull_request:
  
permissions:
  contents: read 
  packages: read

jobs:
  setup:
    runs-on: ["self-hosted", "run-${{github.run_id}}"]
    steps:
      - name: Install .NET to Device
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.x.x"

      - name: Clone and Checkout the Repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}
          clean: true

      - name: Run .NET Restore to reload NuGet Packages
        run: dotnet restore 

  build-nuget:
    runs-on: ["self-hosted", "run-${{github.run_id}}"]
    needs: setup
    outputs:
      packages: ${{ steps.extract-package-names.outputs.PACKAGES}}
    steps:
      - name: Build for NuGet 
        shell: bash
        run: dotnet build ${{ github.event.repository.name }}/${{ github.event.repository.name }}.csproj -c Release -f net8.0

      - name: Pack for NuGet
        id: pack-nuget
        shell: bash
        run: dotnet pack -c Release --no-restore --no-build 

  upload-nuget:
    runs-on: ["self-hosted", "run-${{github.run_id}}"]
    needs: build-nuget
    steps:
      - name: Upload all NuGet packages
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}
          path: ./nupkg/*.nupkg
          retention-days: 1

  build-source:
    needs: setup
    runs-on: ["self-hosted", "run-${{github.run_id}}"]
    strategy:
      matrix:
        platforms: ["win-x64", "win-x86", "linux-x64", "linux-arm64", "osx-x64", "osx-arm64"]
    steps:
      - name: Build as Standalone Source
        shell: bash
        run: dotnet publish ${{ github.event.repository.name }}/${{ github.event.repository.name }}.csproj -c Release -r "${{ matrix.platforms }}" --self-contained true 